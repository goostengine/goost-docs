:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the VisualShape2D.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_VisualShape2D:

VisualShape2D
=============

**Inherits:** :ref:`Node2D<class_Node2D>` **<** :ref:`CanvasItem<class_CanvasItem>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

Draws any :ref:`Shape2D<class_Shape2D>` resource. Useful for quick prototyping and debugging.

Description
-----------

This is a node with the entire purpose of rendering :ref:`Shape2D<class_Shape2D>` resources just like collision shapes are drawn in the editor, yet it's also possible to override the color per each node rather than globally with this class. You may use Godot's :ref:`Polygon2D<class_Polygon2D>` node which is much more suitable for polygon editing and drawing with textures, as any shape can be represented with it.

Properties
----------

+-------------------------------+--------------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`Color<class_Color>`     | :ref:`color<class_VisualShape2D_property_color>`                                                             | ``Color( 1, 1, 1, 1 )`` |
+-------------------------------+--------------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`       | :ref:`debug_sync_visible_collision_shapes<class_VisualShape2D_property_debug_sync_visible_collision_shapes>` | ``false``               |
+-------------------------------+--------------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`       | :ref:`debug_use_default_color<class_VisualShape2D_property_debug_use_default_color>`                         | ``false``               |
+-------------------------------+--------------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`Shape2D<class_Shape2D>` | :ref:`shape<class_VisualShape2D_property_shape>`                                                             |                         |
+-------------------------------+--------------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`       | :ref:`use_parent_shape<class_VisualShape2D_property_use_parent_shape>`                                       | ``false``               |
+-------------------------------+--------------------------------------------------------------------------------------------------------------+-------------------------+

Methods
-------

+-------------------------+----------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>` | :ref:`update_parent_shape<class_VisualShape2D_method_update_parent_shape>` **(** **)** |
+-------------------------+----------------------------------------------------------------------------------------+

Signals
-------

.. _class_VisualShape2D_signal_shape_changed:

- **shape_changed** **(** **)**

Emitted when the :ref:`shape<class_VisualShape2D_property_shape>` is changed (or cleared).

Property Descriptions
---------------------

.. _class_VisualShape2D_property_color:

- :ref:`Color<class_Color>` **color**

+-----------+-------------------------+
| *Default* | ``Color( 1, 1, 1, 1 )`` |
+-----------+-------------------------+
| *Setter*  | set_color(value)        |
+-----------+-------------------------+
| *Getter*  | get_color()             |
+-----------+-------------------------+

The fill color used to draw the :ref:`shape<class_VisualShape2D_property_shape>`.

----

.. _class_VisualShape2D_property_debug_sync_visible_collision_shapes:

- :ref:`bool<class_bool>` **debug_sync_visible_collision_shapes**

+-----------+------------------------------------------------+
| *Default* | ``false``                                      |
+-----------+------------------------------------------------+
| *Setter*  | set_debug_sync_visible_collision_shapes(value) |
+-----------+------------------------------------------------+
| *Getter*  | is_debug_sync_visible_collision_shapes()       |
+-----------+------------------------------------------------+

If ``true``, respects the "Visible Collision Shapes" option so that the shape is only drawn when the option is enabled while the game is running.

\ **Note:** available in debug builds only.

----

.. _class_VisualShape2D_property_debug_use_default_color:

- :ref:`bool<class_bool>` **debug_use_default_color**

+-----------+------------------------------------+
| *Default* | ``false``                          |
+-----------+------------------------------------+
| *Setter*  | set_debug_use_default_color(value) |
+-----------+------------------------------------+
| *Getter*  | is_using_debug_default_color()     |
+-----------+------------------------------------+

If ``true``, this overrides the :ref:`color<class_VisualShape2D_property_color>` with the color used to draw the collision shapes.

\ **Note:** available in debug builds only.

----

.. _class_VisualShape2D_property_shape:

- :ref:`Shape2D<class_Shape2D>` **shape**

+----------+------------------+
| *Setter* | set_shape(value) |
+----------+------------------+
| *Getter* | get_shape()      |
+----------+------------------+

The shape resource used as a reference to draw. The drawing method is specific for each shape and the properties must be configured per shape.

----

.. _class_VisualShape2D_property_use_parent_shape:

- :ref:`bool<class_bool>` **use_parent_shape**

+-----------+-----------------------------+
| *Default* | ``false``                   |
+-----------+-----------------------------+
| *Setter*  | set_use_parent_shape(value) |
+-----------+-----------------------------+
| *Getter*  | is_using_parent_shape()     |
+-----------+-----------------------------+

If ``true``, the shape is fetched from the parent node to draw instead of its own :ref:`shape<class_VisualShape2D_property_shape>`. The parent node must have either ``shape`` as :ref:`Shape2D<class_Shape2D>` property or ``points``, ``polygon`` as :ref:`PoolVector2Array<class_PoolVector2Array>` property defined, else nothing is drawn.

Method Descriptions
-------------------

.. _class_VisualShape2D_method_update_parent_shape:

- :ref:`bool<class_bool>` **update_parent_shape** **(** **)**

Forces to update the shape from parent node. This is called automatically each **idle frame** if :ref:`use_parent_shape<class_VisualShape2D_property_use_parent_shape>` is enabled. Updating the shape each frame may be costly, so you can disable this behavior with ``set_process(false)`` on this node, and update the shape manually with this method when needed.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
