:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the VariantMap.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_VariantMap:

VariantMap
==========

**Inherits:** :ref:`Resource<class_Resource>` **<** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

A two-dimensional data container.

Description
-----------

A data structure which holds an arbitrary number of elements accessed via 2D coordinates. Each cell represents a single element which stores any :ref:`Variant<class_Variant>` compatible datatype. Can act as a helper class for other pixel-based classes such as :ref:`Image<class_Image>`, :ref:`BitMap<class_BitMap>` etc.

The map is initialized with :ref:`create<class_VariantMap_method_create>` method:

::

    var map = VariantMap.new()
    map.create(3, 4)
    map.set_element(2, 3, "Goost")
    print(map.get_element(2, 3)) # Prints: "Goost".

Traversing all elements can be done just like two-dimensional array (or image):

::

    for y in map.get_height():
        for x in map.get_width():
            print(map.get_element(x, y))

Alternatively, all elements can be traversed using a simplified syntax:

::

    for element in map:
        print(element)

Properties
----------

+-------------------------------------+---------------------------------------------+-------------------------------------------+
| :ref:`Dictionary<class_Dictionary>` | :ref:`data<class_VariantMap_property_data>` | ``{"data": [  ],"height": 0,"width": 0}`` |
+-------------------------------------+---------------------------------------------+-------------------------------------------+

Methods
-------

+-------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`clear<class_VariantMap_method_clear>` **(** **)**                                                                                                                 |
+-------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`create<class_VariantMap_method_create>` **(** :ref:`int<class_int>` width, :ref:`int<class_int>` height **)**                                                     |
+-------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`create_from_data<class_VariantMap_method_create_from_data>` **(** :ref:`int<class_int>` width, :ref:`int<class_int>` height, :ref:`Array<class_Array>` data **)** |
+-------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`fill<class_VariantMap_method_fill>` **(** :ref:`Variant<class_Variant>` with_value **)**                                                                          |
+-------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Variant<class_Variant>` | :ref:`get_cell<class_VariantMap_method_get_cell>` **(** :ref:`Vector2<class_Vector2>` position **)**                                                                    |
+-------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Variant<class_Variant>` | :ref:`get_cell_or_null<class_VariantMap_method_get_cell_or_null>` **(** :ref:`Vector2<class_Vector2>` position **)**                                                    |
+-------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Variant<class_Variant>` | :ref:`get_element<class_VariantMap_method_get_element>` **(** :ref:`int<class_int>` x, :ref:`int<class_int>` y **)**                                                    |
+-------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`         | :ref:`get_height<class_VariantMap_method_get_height>` **(** **)** |const|                                                                                               |
+-------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`get_size<class_VariantMap_method_get_size>` **(** **)** |const|                                                                                                   |
+-------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`         | :ref:`get_width<class_VariantMap_method_get_width>` **(** **)** |const|                                                                                                 |
+-------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`       | :ref:`has_cell<class_VariantMap_method_has_cell>` **(** :ref:`Vector2<class_Vector2>` position **)**                                                                    |
+-------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`       | :ref:`is_empty<class_VariantMap_method_is_empty>` **(** **)** |const|                                                                                                   |
+-------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`resize<class_VariantMap_method_resize>` **(** :ref:`int<class_int>` new_width, :ref:`int<class_int>` new_height **)**                                             |
+-------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`set_cell<class_VariantMap_method_set_cell>` **(** :ref:`Vector2<class_Vector2>` position, :ref:`Variant<class_Variant>` value **)**                               |
+-------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`set_element<class_VariantMap_method_set_element>` **(** :ref:`int<class_int>` x, :ref:`int<class_int>` y, :ref:`Variant<class_Variant>` value **)**               |
+-------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Property Descriptions
---------------------

.. _class_VariantMap_property_data:

- :ref:`Dictionary<class_Dictionary>` **data**

+-----------+-------------------------------------------+
| *Default* | ``{"data": [  ],"height": 0,"width": 0}`` |
+-----------+-------------------------------------------+

The data which represents this map. Used for storage.

Method Descriptions
-------------------

.. _class_VariantMap_method_clear:

- void **clear** **(** **)**

Clears all elements in this map.

----

.. _class_VariantMap_method_create:

- void **create** **(** :ref:`int<class_int>` width, :ref:`int<class_int>` height **)**

Initializes the map by allocating new data to hold ``width * height`` elements. By default, all elements of the map are initialized to ``null`` values.

**Note:** this clears all existing elements from the map before creation.

----

.. _class_VariantMap_method_create_from_data:

- void **create_from_data** **(** :ref:`int<class_int>` width, :ref:`int<class_int>` height, :ref:`Array<class_Array>` data **)**

Initializes the map from a continuos 1D array of data. The number of elements in ``data`` must be equal to ``width * height``.

----

.. _class_VariantMap_method_fill:

- void **fill** **(** :ref:`Variant<class_Variant>` with_value **)**

Fills all elements in the map with a specified value.

----

.. _class_VariantMap_method_get_cell:

- :ref:`Variant<class_Variant>` **get_cell** **(** :ref:`Vector2<class_Vector2>` position **)**

Similar to :ref:`get_element<class_VariantMap_method_get_element>`, but accepts :ref:`Vector2<class_Vector2>` as coordinates.

----

.. _class_VariantMap_method_get_cell_or_null:

- :ref:`Variant<class_Variant>` **get_cell_or_null** **(** :ref:`Vector2<class_Vector2>` position **)**

Returns cell's value if the map contains an element at specified position, otherwise returns ``null``. See also :ref:`has_cell<class_VariantMap_method_has_cell>`.

----

.. _class_VariantMap_method_get_element:

- :ref:`Variant<class_Variant>` **get_element** **(** :ref:`int<class_int>` x, :ref:`int<class_int>` y **)**

Returns an element at specified coordinates.

----

.. _class_VariantMap_method_get_height:

- :ref:`int<class_int>` **get_height** **(** **)** |const|

Returns the total number of rows.

----

.. _class_VariantMap_method_get_size:

- :ref:`Vector2<class_Vector2>` **get_size** **(** **)** |const|

Returns the map dimensions as :ref:`Vector2<class_Vector2>` (width and height).

----

.. _class_VariantMap_method_get_width:

- :ref:`int<class_int>` **get_width** **(** **)** |const|

Returns the total number of elements per row.

----

.. _class_VariantMap_method_has_cell:

- :ref:`bool<class_bool>` **has_cell** **(** :ref:`Vector2<class_Vector2>` position **)**

Returns ``true`` if the map contains an element at specified position. Returns ``false`` if the position lies outside the map dimensions. See also :ref:`get_cell_or_null<class_VariantMap_method_get_cell_or_null>`.

----

.. _class_VariantMap_method_is_empty:

- :ref:`bool<class_bool>` **is_empty** **(** **)** |const|

Returns whether the map is empty (does not contain data).

----

.. _class_VariantMap_method_resize:

- void **resize** **(** :ref:`int<class_int>` new_width, :ref:`int<class_int>` new_height **)**

Resizes the map to have a different number of elements. Resizing an existing map to a smaller size rearranges the elements to fit new width and height without preserving original positions (**To-do:** implement cropping method for this). Resizing an existing map to a larger size initializes new elements to ``null``.

----

.. _class_VariantMap_method_set_cell:

- void **set_cell** **(** :ref:`Vector2<class_Vector2>` position, :ref:`Variant<class_Variant>` value **)**

Similar to :ref:`set_element<class_VariantMap_method_set_element>`, but accepts :ref:`Vector2<class_Vector2>` as coordinates.

----

.. _class_VariantMap_method_set_element:

- void **set_element** **(** :ref:`int<class_int>` x, :ref:`int<class_int>` y, :ref:`Variant<class_Variant>` value **)**

Sets any value to element at specified coordinates.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
