:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the GraphVertex.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_GraphVertex:

GraphVertex
===========

**Inherits:** :ref:`Object<class_Object>`

A data structure used to represent a vertex in a :ref:`Graph<class_Graph>`.

Description
-----------

A vertex holds a data and information about all neighbor vertices that are connected to it. To traverse all neighbors, use :ref:`get_neighbors<class_GraphVertex_method_get_neighbors>`:

::

    for n in v.get_neighbors():
        print(n)

You can also use a built-in (GDScript) iterator to traverse all neighbors (may be slower):

::

    for n in v:
        print(n)

For enumerating edges instead of vertices, use :ref:`get_edges<class_GraphVertex_method_get_edges>`:

::

    for e in v.get_edges():
        print(e.a, " ", e.b)

If you need to traverse the graph without producing duplicates, you may also consider using graph's default :ref:`Graph.iterator<class_Graph_property_iterator>`.

Properties
----------

+-------------------------------+------------------------------------------------+
| :ref:`Variant<class_Variant>` | :ref:`value<class_GraphVertex_property_value>` |
+-------------------------------+------------------------------------------------+

Methods
-------

+---------------------------+--------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>` | :ref:`get_edges<class_GraphVertex_method_get_edges>` **(** **)** |const|                         |
+---------------------------+--------------------------------------------------------------------------------------------------+
| :ref:`Graph<class_Graph>` | :ref:`get_graph<class_GraphVertex_method_get_graph>` **(** **)** |const|                         |
+---------------------------+--------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>` | :ref:`get_incoming_edges<class_GraphVertex_method_get_incoming_edges>` **(** **)** |const|       |
+---------------------------+--------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`     | :ref:`get_neighbor_count<class_GraphVertex_method_get_neighbor_count>` **(** **)** |const|       |
+---------------------------+--------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>` | :ref:`get_neighbors<class_GraphVertex_method_get_neighbors>` **(** **)** |const|                 |
+---------------------------+--------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>` | :ref:`get_outgoing_edges<class_GraphVertex_method_get_outgoing_edges>` **(** **)** |const|       |
+---------------------------+--------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`     | :ref:`get_predecessor_count<class_GraphVertex_method_get_predecessor_count>` **(** **)** |const| |
+---------------------------+--------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>` | :ref:`get_predecessors<class_GraphVertex_method_get_predecessors>` **(** **)** |const|           |
+---------------------------+--------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`     | :ref:`get_successor_count<class_GraphVertex_method_get_successor_count>` **(** **)** |const|     |
+---------------------------+--------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>` | :ref:`get_successors<class_GraphVertex_method_get_successors>` **(** **)** |const|               |
+---------------------------+--------------------------------------------------------------------------------------------------+

Property Descriptions
---------------------

.. _class_GraphVertex_property_value:

- :ref:`Variant<class_Variant>` **value**

+----------+------------------+
| *Setter* | set_value(value) |
+----------+------------------+
| *Getter* | get_value()      |
+----------+------------------+

Vertex data (could a label, a list of attributes etc).

Method Descriptions
-------------------

.. _class_GraphVertex_method_get_edges:

- :ref:`Array<class_Array>` **get_edges** **(** **)** |const|

Returns all :ref:`GraphEdge<class_GraphEdge>`\ s associated with this vertex, including incoming and outgoing edges, see :ref:`get_incoming_edges<class_GraphVertex_method_get_incoming_edges>` and :ref:`get_outgoing_edges<class_GraphVertex_method_get_outgoing_edges>` methods.

----

.. _class_GraphVertex_method_get_graph:

- :ref:`Graph<class_Graph>` **get_graph** **(** **)** |const|

Returns the master :ref:`Graph<class_Graph>` that instantiated and manages this vertex.

----

.. _class_GraphVertex_method_get_incoming_edges:

- :ref:`Array<class_Array>` **get_incoming_edges** **(** **)** |const|

Returns all :ref:`GraphEdge<class_GraphEdge>`\ s that point from predecessor vertices.

----

.. _class_GraphVertex_method_get_neighbor_count:

- :ref:`int<class_int>` **get_neighbor_count** **(** **)** |const|

Returns the total number of neighbor vertices.

----

.. _class_GraphVertex_method_get_neighbors:

- :ref:`Array<class_Array>` **get_neighbors** **(** **)** |const|

Returns a list of all ``GraphVertex`` neighbors.

----

.. _class_GraphVertex_method_get_outgoing_edges:

- :ref:`Array<class_Array>` **get_outgoing_edges** **(** **)** |const|

Returns all :ref:`GraphEdge<class_GraphEdge>`\ s that point to successor vertices.

----

.. _class_GraphVertex_method_get_predecessor_count:

- :ref:`int<class_int>` **get_predecessor_count** **(** **)** |const|

Returns the total number of predecessor vertices.

----

.. _class_GraphVertex_method_get_predecessors:

- :ref:`Array<class_Array>` **get_predecessors** **(** **)** |const|

Returns a list of all ``GraphVertex`` predecessors (vertices that point to this one).

----

.. _class_GraphVertex_method_get_successor_count:

- :ref:`int<class_int>` **get_successor_count** **(** **)** |const|

Returns the total number of successor vertices.

----

.. _class_GraphVertex_method_get_successors:

- :ref:`Array<class_Array>` **get_successors** **(** **)** |const|

Returns a list of all ``GraphVertex`` successors (vertices that point away from this one).

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
