:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the PolyOffset2D.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_PolyOffset2D:

PolyOffset2D
============

**Inherits:** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

Polygon deflating and inflating.

Description
-----------

A singleton which provides various method for polygon and polylines deflating, inflating, buffering etc.

A new local instance must be created manually with :ref:`new_instance<class_PolyOffset2D_method_new_instance>` method if you need to override the default :ref:`parameters<class_PolyOffset2D_property_parameters>`, else the methods in this class are available globally:

::

    var polygons = []
    # Globally.
    polygons = PolyOffset2D.deflate_polygons([poly_a, poly_b])
    # Locally.
    var po = PolyOffset2D.new_instance()
    po.parameters.miter_limit = 3.0
    polygons = po.deflate_polygons([poly_a, poly_b])

Properties
----------

+-------------------------------------------------------------+-----------------------------------------------------------+
| :ref:`PolyOffsetParameters2D<class_PolyOffsetParameters2D>` | :ref:`parameters<class_PolyOffset2D_property_parameters>` |
+-------------------------------------------------------------+-----------------------------------------------------------+

Methods
-------

+-----------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>`         | :ref:`deflate_polygons<class_PolyOffset2D_method_deflate_polygons>` **(** :ref:`Array<class_Array>` polygons, :ref:`float<class_float>` delta **)** |const|    |
+-----------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>`         | :ref:`deflate_polylines<class_PolyOffset2D_method_deflate_polylines>` **(** :ref:`Array<class_Array>` polylines, :ref:`float<class_float>` delta **)** |const| |
+-----------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>`         | :ref:`inflate_polygons<class_PolyOffset2D_method_inflate_polygons>` **(** :ref:`Array<class_Array>` polygons, :ref:`float<class_float>` delta **)** |const|    |
+-----------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Reference<class_Reference>` | :ref:`new_instance<class_PolyOffset2D_method_new_instance>` **(** **)** |const|                                                                                |
+-----------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------+

Property Descriptions
---------------------

.. _class_PolyOffset2D_property_parameters:

- :ref:`PolyOffsetParameters2D<class_PolyOffsetParameters2D>` **parameters**

+----------+-----------------------+
| *Setter* | set_parameters(value) |
+----------+-----------------------+
| *Getter* | get_parameters()      |
+----------+-----------------------+

Parameters to configure the default behavior of operations. Cannot be configured via the global instance, use :ref:`new_instance<class_PolyOffset2D_method_new_instance>` first if you need to override the defaults.

Method Descriptions
-------------------

.. _class_PolyOffset2D_method_deflate_polygons:

- :ref:`Array<class_Array>` **deflate_polygons** **(** :ref:`Array<class_Array>` polygons, :ref:`float<class_float>` delta **)** |const|

Deflates an array of ``polygons`` by ``delta`` pixels, growing the polygons outward.

Each polygon's vertices will be rounded as determined by :ref:`PolyOffsetParameters2D.join_type<class_PolyOffsetParameters2D_property_join_type>`.

----

.. _class_PolyOffset2D_method_deflate_polylines:

- :ref:`Array<class_Array>` **deflate_polylines** **(** :ref:`Array<class_Array>` polylines, :ref:`float<class_float>` delta **)** |const|

Deflates (grows) ``polylines`` into polygons by ``delta`` pixels.

Each polygon's vertices will be rounded as determined by :ref:`PolyOffsetParameters2D.join_type<class_PolyOffsetParameters2D_property_join_type>`.

Each polygon's endpoints will be rounded as determined by :ref:`PolyOffsetParameters2D.end_type<class_PolyOffsetParameters2D_property_end_type>`, except for the :ref:`PolyOffsetParameters2D.END_POLYGON<class_PolyOffsetParameters2D_constant_END_POLYGON>` as it's used by polygon offsetting specifically, use :ref:`PolyOffsetParameters2D.END_JOINED<class_PolyOffsetParameters2D_constant_END_JOINED>` to grow a polyline like a closed donut instead.

----

.. _class_PolyOffset2D_method_inflate_polygons:

- :ref:`Array<class_Array>` **inflate_polygons** **(** :ref:`Array<class_Array>` polygons, :ref:`float<class_float>` delta **)** |const|

Inflates an array of ``polygons`` by ``delta`` pixels, shrinking the polygons inward. Returns an empty array if ``delta`` approximately exceeds the minimum bounding rectangle dimensions of each of the polygons.

Each polygon's vertices will be rounded as determined by :ref:`PolyOffsetParameters2D.join_type<class_PolyOffsetParameters2D_property_join_type>`.

----

.. _class_PolyOffset2D_method_new_instance:

- :ref:`Reference<class_Reference>` **new_instance** **(** **)** |const|

Instantiates a new local ``PolyOffset2D`` instance, and :ref:`parameters<class_PolyOffset2D_property_parameters>` can be configured.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
