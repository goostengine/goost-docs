:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the CommandLineParser.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_CommandLineParser:

CommandLineParser
=================

**Inherits:** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

Enables parsing of command-line arguments.

Description
-----------

``CommandLineParser`` allows to define a set of :ref:`CommandLineOption<class_CommandLineOption>`\ s, parse the command-line arguments, store parsed options and respective values. The class is mainly useful for parsing arguments from :ref:`OS.get_cmdline_args<class_OS_method_get_cmdline_args>`, but can be used for other purposes as well.

Options on the command line are recognized as starting with any of the specified :ref:`long_prefixes<class_CommandLineParser_property_long_prefixes>` or :ref:`short_prefixes<class_CommandLineParser_property_short_prefixes>` values. Long options consist of more than one character. Short options always consist of one character and can be written in a compound form, for instance ``-abc`` is equivalent to ``-a -b -c``.

Option values can be specified either separated by a space or by an ``=`` sign (if the option takes only 1 argument). Short options can also have sticky values (without a space in-between, e.g. ``-Dvalue``).

Values can also be specified without an option name and the first option that is marked as :ref:`CommandLineOption.positional<class_CommandLineOption_property_positional>` will be assigned automatically. For example, if the ``input-file`` argument is marked as positional, then you can write either ``--input-file=filename`` or just ``filename``.

The option ``--`` (without any symbol after) is a special case and means that all following options will be captured as valid and can be obtained later using :ref:`get_forwarding_args<class_CommandLineParser_method_get_forwarding_args>`.

Example:

::

    var parser = CommandLineParser.new()
    
    func _init():
        var help = parser.add_help_option()
        var version = parser.add_version_option()
        var input = parser.add_option("input", "Specify filename to process.")
    
        if parser.parse(["--input", "/path/to/file.txt"]) != OK:
            print(parser.get_error_text())
            return
    
        if parser.is_set(help):
            print(parser.get_help_text())
            return
    
        if parser.is_set(version):
            print(GoostEngine.get_version_info().string)
            return
    
        print("Parsed value from '--input': ", parser.get_value(input))

Properties
----------

+-----------------------------------------------+--------------------------------------------------------------------------------------+-----------------------------+
| :ref:`bool<class_bool>`                       | :ref:`allow_adjacent<class_CommandLineParser_property_allow_adjacent>`               | ``true``                    |
+-----------------------------------------------+--------------------------------------------------------------------------------------+-----------------------------+
| :ref:`bool<class_bool>`                       | :ref:`allow_compound<class_CommandLineParser_property_allow_compound>`               | ``true``                    |
+-----------------------------------------------+--------------------------------------------------------------------------------------+-----------------------------+
| :ref:`bool<class_bool>`                       | :ref:`allow_forwarding_args<class_CommandLineParser_property_allow_forwarding_args>` | ``false``                   |
+-----------------------------------------------+--------------------------------------------------------------------------------------+-----------------------------+
| :ref:`bool<class_bool>`                       | :ref:`allow_sticky<class_CommandLineParser_property_allow_sticky>`                   | ``true``                    |
+-----------------------------------------------+--------------------------------------------------------------------------------------+-----------------------------+
| :ref:`PoolStringArray<class_PoolStringArray>` | :ref:`long_prefixes<class_CommandLineParser_property_long_prefixes>`                 | ``PoolStringArray( "--" )`` |
+-----------------------------------------------+--------------------------------------------------------------------------------------+-----------------------------+
| :ref:`PoolStringArray<class_PoolStringArray>` | :ref:`short_prefixes<class_CommandLineParser_property_short_prefixes>`               | ``PoolStringArray( "-" )``  |
+-----------------------------------------------+--------------------------------------------------------------------------------------+-----------------------------+
| :ref:`float<class_float>`                     | :ref:`similarity_bias<class_CommandLineParser_property_similarity_bias>`             | ``0.3``                     |
+-----------------------------------------------+--------------------------------------------------------------------------------------+-----------------------------+

Methods
-------

+---------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`CommandLineOption<class_CommandLineOption>` | :ref:`add_help_option<class_CommandLineParser_method_add_help_option>` **(** **)**                                                                                                                                                                                                    |
+---------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`CommandLineOption<class_CommandLineOption>` | :ref:`add_option<class_CommandLineParser_method_add_option>` **(** :ref:`String<class_String>` name, :ref:`String<class_String>` description="", :ref:`String<class_String>` default_value="", :ref:`PoolStringArray<class_PoolStringArray>` allowed_values=PoolStringArray(  ) **)** |
+---------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`CommandLineOption<class_CommandLineOption>` | :ref:`add_version_option<class_CommandLineParser_method_add_version_option>` **(** **)**                                                                                                                                                                                              |
+---------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                              | :ref:`append_option<class_CommandLineParser_method_append_option>` **(** :ref:`CommandLineOption<class_CommandLineOption>` option **)**                                                                                                                                               |
+---------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                              | :ref:`clear<class_CommandLineParser_method_clear>` **(** **)**                                                                                                                                                                                                                        |
+---------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`CommandLineOption<class_CommandLineOption>` | :ref:`find_option<class_CommandLineParser_method_find_option>` **(** :ref:`String<class_String>` name **)** |const|                                                                                                                                                                   |
+---------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`PoolStringArray<class_PoolStringArray>`     | :ref:`get_args<class_CommandLineParser_method_get_args>` **(** **)** |const|                                                                                                                                                                                                          |
+---------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                       | :ref:`get_error_text<class_CommandLineParser_method_get_error_text>` **(** **)** |const|                                                                                                                                                                                              |
+---------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`PoolStringArray<class_PoolStringArray>`     | :ref:`get_forwarding_args<class_CommandLineParser_method_get_forwarding_args>` **(** **)** |const|                                                                                                                                                                                    |
+---------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                       | :ref:`get_help_text<class_CommandLineParser_method_get_help_text>` **(** :ref:`CommandLineHelpFormat<class_CommandLineHelpFormat>` format=null **)** |const|                                                                                                                          |
+---------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                             | :ref:`get_occurrence_count<class_CommandLineParser_method_get_occurrence_count>` **(** :ref:`CommandLineOption<class_CommandLineOption>` option **)** |const|                                                                                                                         |
+---------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`CommandLineOption<class_CommandLineOption>` | :ref:`get_option<class_CommandLineParser_method_get_option>` **(** :ref:`int<class_int>` index **)** |const|                                                                                                                                                                          |
+---------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                             | :ref:`get_option_count<class_CommandLineParser_method_get_option_count>` **(** **)** |const|                                                                                                                                                                                          |
+---------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                       | :ref:`get_prefix<class_CommandLineParser_method_get_prefix>` **(** :ref:`CommandLineOption<class_CommandLineOption>` option **)** |const|                                                                                                                                             |
+---------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`PoolStringArray<class_PoolStringArray>`     | :ref:`get_prefix_list<class_CommandLineParser_method_get_prefix_list>` **(** :ref:`CommandLineOption<class_CommandLineOption>` option **)** |const|                                                                                                                                   |
+---------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                       | :ref:`get_value<class_CommandLineParser_method_get_value>` **(** :ref:`CommandLineOption<class_CommandLineOption>` option **)** |const|                                                                                                                                               |
+---------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`PoolStringArray<class_PoolStringArray>`     | :ref:`get_value_list<class_CommandLineParser_method_get_value_list>` **(** :ref:`CommandLineOption<class_CommandLineOption>` option **)** |const|                                                                                                                                     |
+---------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                           | :ref:`is_set<class_CommandLineParser_method_is_set>` **(** :ref:`CommandLineOption<class_CommandLineOption>` option **)** |const|                                                                                                                                                     |
+---------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Error<enum_@GlobalScope_Error>`             | :ref:`parse<class_CommandLineParser_method_parse>` **(** :ref:`PoolStringArray<class_PoolStringArray>` args **)**                                                                                                                                                                     |
+---------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                              | :ref:`remove_option<class_CommandLineParser_method_remove_option>` **(** :ref:`int<class_int>` index **)**                                                                                                                                                                            |
+---------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                              | :ref:`set_option<class_CommandLineParser_method_set_option>` **(** :ref:`int<class_int>` index, :ref:`CommandLineOption<class_CommandLineOption>` option **)**                                                                                                                        |
+---------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Property Descriptions
---------------------

.. _class_CommandLineParser_property_allow_adjacent:

- :ref:`bool<class_bool>` **allow_adjacent**

+-----------+---------------------------+
| *Default* | ``true``                  |
+-----------+---------------------------+
| *Setter*  | set_allow_adjacent(value) |
+-----------+---------------------------+
| *Getter*  | is_adjacent_allowed()     |
+-----------+---------------------------+

If ``true``, values for options can delimited by ``=`` sign. Example: ``--input=filename.png``.

----

.. _class_CommandLineParser_property_allow_compound:

- :ref:`bool<class_bool>` **allow_compound**

+-----------+---------------------------+
| *Default* | ``true``                  |
+-----------+---------------------------+
| *Setter*  | set_allow_compound(value) |
+-----------+---------------------------+
| *Getter*  | is_compound_allowed()     |
+-----------+---------------------------+

If ``true``, short options can be specified without a space. Example: ``-aux`` will be equivalent to ``-a -u -x``.

----

.. _class_CommandLineParser_property_allow_forwarding_args:

- :ref:`bool<class_bool>` **allow_forwarding_args**

+-----------+----------------------------------+
| *Default* | ``false``                        |
+-----------+----------------------------------+
| *Setter*  | set_allow_forwarding_args(value) |
+-----------+----------------------------------+
| *Getter*  | are_forwarding_args_allowed()    |
+-----------+----------------------------------+

If ``true``, all arguments after ``--`` will be treated as forwarding arguments and will be available using the :ref:`get_forwarding_args<class_CommandLineParser_method_get_forwarding_args>`. Such arguments won't be parsed as options.

----

.. _class_CommandLineParser_property_allow_sticky:

- :ref:`bool<class_bool>` **allow_sticky**

+-----------+-------------------------+
| *Default* | ``true``                |
+-----------+-------------------------+
| *Setter*  | set_allow_sticky(value) |
+-----------+-------------------------+
| *Getter*  | is_sticky_allowed()     |
+-----------+-------------------------+

If ``true``, values for short options can be specified without a space. Example: ``-ifilename.png``.

----

.. _class_CommandLineParser_property_long_prefixes:

- :ref:`PoolStringArray<class_PoolStringArray>` **long_prefixes**

+-----------+-----------------------------+
| *Default* | ``PoolStringArray( "--" )`` |
+-----------+-----------------------------+
| *Setter*  | set_long_prefixes(value)    |
+-----------+-----------------------------+
| *Getter*  | get_long_prefixes()         |
+-----------+-----------------------------+

A list of prefixes after which an argument will be considered a long option. If two or more prefixes share the same set of characters (e.g. ``--`` and ``--no-``), longest prefixes have higher precedence for parsing. For instance, ``--no-debug`` won't be parsed as a separate ``no-debug`` option, but as ``debug``.

----

.. _class_CommandLineParser_property_short_prefixes:

- :ref:`PoolStringArray<class_PoolStringArray>` **short_prefixes**

+-----------+----------------------------+
| *Default* | ``PoolStringArray( "-" )`` |
+-----------+----------------------------+
| *Setter*  | set_short_prefixes(value)  |
+-----------+----------------------------+
| *Getter*  | get_short_prefixes()       |
+-----------+----------------------------+

A list of prefixes after which an argument will be considered a short option.

----

.. _class_CommandLineParser_property_similarity_bias:

- :ref:`float<class_float>` **similarity_bias**

+-----------+----------------------------+
| *Default* | ``0.3``                    |
+-----------+----------------------------+
| *Setter*  | set_similarity_bias(value) |
+-----------+----------------------------+
| *Getter*  | get_similarity_bias()      |
+-----------+----------------------------+

If a user entered a wrong option, the parser will suggest the most similar one in the error text returned by :ref:`get_error_text<class_CommandLineParser_method_get_error_text>`. If the most similar option found has a similarity value lower than the specified one, then it won't be suggested. Similarity is determined by :ref:`String.similarity<class_String_method_similarity>`.

Method Descriptions
-------------------

.. _class_CommandLineParser_method_add_help_option:

- :ref:`CommandLineOption<class_CommandLineOption>` **add_help_option** **(** **)**

Adds the help option (-h, --help) with the default description. The option is automatically marked as :ref:`CommandLineOption.meta<class_CommandLineOption_property_meta>`.

----

.. _class_CommandLineParser_method_add_option:

- :ref:`CommandLineOption<class_CommandLineOption>` **add_option** **(** :ref:`String<class_String>` name, :ref:`String<class_String>` description="", :ref:`String<class_String>` default_value="", :ref:`PoolStringArray<class_PoolStringArray>` allowed_values=PoolStringArray(  ) **)**

Instantiates a new :ref:`CommandLineOption<class_CommandLineOption>` with a single name and adds it to the parser. Description, default value, and a list of allowed values can be optionally specified. Note that this method provides common parameters only, you can create :ref:`CommandLineOption<class_CommandLineOption>` and use :ref:`append_option<class_CommandLineParser_method_append_option>` manually if you need to configure other properties for a new option, or modify the properties of the option returned by this method instead before parsing command-line arguments with :ref:`parse<class_CommandLineParser_method_parse>`.

----

.. _class_CommandLineParser_method_add_version_option:

- :ref:`CommandLineOption<class_CommandLineOption>` **add_version_option** **(** **)**

Adds the version option (-v, --version) with the default description. The option is automatically marked as :ref:`CommandLineOption.meta<class_CommandLineOption_property_meta>`.

----

.. _class_CommandLineParser_method_append_option:

- void **append_option** **(** :ref:`CommandLineOption<class_CommandLineOption>` option **)**

Adds an existing option to look for while parsing. Prefer to use :ref:`add_option<class_CommandLineParser_method_add_option>` for defining new command-line options.

----

.. _class_CommandLineParser_method_clear:

- void **clear** **(** **)**

Clears all parsed data and specified options.

----

.. _class_CommandLineParser_method_find_option:

- :ref:`CommandLineOption<class_CommandLineOption>` **find_option** **(** :ref:`String<class_String>` name **)** |const|

Finds an option by name, returns ``null`` if it doesn't exist.

----

.. _class_CommandLineParser_method_get_args:

- :ref:`PoolStringArray<class_PoolStringArray>` **get_args** **(** **)** |const|

Returns all arguments that were passed by :ref:`parse<class_CommandLineParser_method_parse>`.

----

.. _class_CommandLineParser_method_get_error_text:

- :ref:`String<class_String>` **get_error_text** **(** **)** |const|

Returns a human-readable description of the last parser error that occurred.

----

.. _class_CommandLineParser_method_get_forwarding_args:

- :ref:`PoolStringArray<class_PoolStringArray>` **get_forwarding_args** **(** **)** |const|

Returns all arguments that were forwarded after parsing (e.g. all arguments after ``--``).

----

.. _class_CommandLineParser_method_get_help_text:

- :ref:`String<class_String>` **get_help_text** **(** :ref:`CommandLineHelpFormat<class_CommandLineHelpFormat>` format=null **)** |const|

Returns a string containing the complete help information generated from the added options. If ``format`` is not ``null``, the returned text will be formatted with a custom format defined via :ref:`CommandLineHelpFormat<class_CommandLineHelpFormat>` object, otherwise the default format is used.

----

.. _class_CommandLineParser_method_get_occurrence_count:

- :ref:`int<class_int>` **get_occurrence_count** **(** :ref:`CommandLineOption<class_CommandLineOption>` option **)** |const|

Returns the number of times the option was parsed. Mostly useful for options which are defined as multitoken, see :ref:`CommandLineOption.multitoken<class_CommandLineOption_property_multitoken>`.

----

.. _class_CommandLineParser_method_get_option:

- :ref:`CommandLineOption<class_CommandLineOption>` **get_option** **(** :ref:`int<class_int>` index **)** |const|

Returns the option at index position ``index``. Negative indices can be used to count from the back, like in Python (-1 is the last element, -2 the second to last, etc.).

----

.. _class_CommandLineParser_method_get_option_count:

- :ref:`int<class_int>` **get_option_count** **(** **)** |const|

Returns the number of options in the parser.

----

.. _class_CommandLineParser_method_get_prefix:

- :ref:`String<class_String>` **get_prefix** **(** :ref:`CommandLineOption<class_CommandLineOption>` option **)** |const|

Returns first used prefix for ``option``. Example: for parsed ``--help`` will return ``--``. Convenient helper for :ref:`get_prefix_list<class_CommandLineParser_method_get_prefix_list>`.

----

.. _class_CommandLineParser_method_get_prefix_list:

- :ref:`PoolStringArray<class_PoolStringArray>` **get_prefix_list** **(** :ref:`CommandLineOption<class_CommandLineOption>` option **)** |const|

Returns all used prefixes for ``option``.

----

.. _class_CommandLineParser_method_get_value:

- :ref:`String<class_String>` **get_value** **(** :ref:`CommandLineOption<class_CommandLineOption>` option **)** |const|

Returns first specified value for ``option``. Example: for parsed ``--input filename.png`` will return ``filename.png``. Convenient helper for :ref:`get_value_list<class_CommandLineParser_method_get_value_list>`.

----

.. _class_CommandLineParser_method_get_value_list:

- :ref:`PoolStringArray<class_PoolStringArray>` **get_value_list** **(** :ref:`CommandLineOption<class_CommandLineOption>` option **)** |const|

Returns all specified values for ``option``.

----

.. _class_CommandLineParser_method_is_set:

- :ref:`bool<class_bool>` **is_set** **(** :ref:`CommandLineOption<class_CommandLineOption>` option **)** |const|

Returns ``true`` if ``option`` was specified. If the option does not accept any arguments (:ref:`CommandLineOption.arg_count<class_CommandLineOption_property_arg_count>` is equal to ``0``), this is the only way to check whether the option was specified on the command-line.

----

.. _class_CommandLineParser_method_parse:

- :ref:`Error<enum_@GlobalScope_Error>` **parse** **(** :ref:`PoolStringArray<class_PoolStringArray>` args **)**

Parses command-line ``args``. Returns :ref:`@GlobalScope.OK<class_@GlobalScope_constant_OK>` upon success, or :ref:`@GlobalScope.ERR_PARSE_ERROR<class_@GlobalScope_constant_ERR_PARSE_ERROR>` upon failure. In case of user error, refer to :ref:`get_error_text<class_CommandLineParser_method_get_error_text>` which returns human-readable error message which can be printed to a user.

The method can accept command-line arguments returned by :ref:`OS.get_cmdline_args<class_OS_method_get_cmdline_args>`.

\ **Note**: this method accepts a list of strings. Do not attempt to parse a single string containing command-line arguments with this method. You should split the string into components prior to parsing using :ref:`String.split<class_String_method_split>`, if needed.

----

.. _class_CommandLineParser_method_remove_option:

- void **remove_option** **(** :ref:`int<class_int>` index **)**

Removes option at specified ``index``.

----

.. _class_CommandLineParser_method_set_option:

- void **set_option** **(** :ref:`int<class_int>` index, :ref:`CommandLineOption<class_CommandLineOption>` option **)**

Replaces option at specified ``index`` with another ``option``.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
