:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the ListNode.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_ListNode:

ListNode
========

**Inherits:** :ref:`Object<class_Object>`

A single element in the :ref:`LinkedList<class_LinkedList>`.

Description
-----------

The list node is an elemental building block which represent the entire structure of :ref:`LinkedList<class_LinkedList>`\ s. It has :ref:`next<class_ListNode_property_next>` and :ref:`prev<class_ListNode_property_prev>` properties which are assigned whenever a new element is inserted into the list, such as using :ref:`LinkedList.push_back<class_LinkedList_method_push_back>`.

You can call :ref:`Object.free<class_Object_method_free>` to remove this node from the list it belongs to.

Properties
----------

+---------------------------------+---------------------------------------------+
| :ref:`ListNode<class_ListNode>` | :ref:`next<class_ListNode_property_next>`   |
+---------------------------------+---------------------------------------------+
| :ref:`ListNode<class_ListNode>` | :ref:`prev<class_ListNode_property_prev>`   |
+---------------------------------+---------------------------------------------+
| :ref:`Variant<class_Variant>`   | :ref:`value<class_ListNode_property_value>` |
+---------------------------------+---------------------------------------------+

Property Descriptions
---------------------

.. _class_ListNode_property_next:

- :ref:`ListNode<class_ListNode>` **next**

+----------+------------+
| *Getter* | get_next() |
+----------+------------+

The next node this node points to in the :ref:`LinkedList<class_LinkedList>`. If ``null``, then this node is the last element in the list, which is equivalent to :ref:`LinkedList.back<class_LinkedList_property_back>`.

----

.. _class_ListNode_property_prev:

- :ref:`ListNode<class_ListNode>` **prev**

+----------+------------+
| *Getter* | get_prev() |
+----------+------------+

The previous node this node points to in the :ref:`LinkedList<class_LinkedList>`. If ``null``, then this node is the first element in the list, which is equivalent to :ref:`LinkedList.front<class_LinkedList_property_front>`.

----

.. _class_ListNode_property_value:

- :ref:`Variant<class_Variant>` **value**

+----------+------------------+
| *Setter* | set_value(value) |
+----------+------------------+
| *Getter* | get_value()      |
+----------+------------------+

The data this node holds, usually initialized with the list methods such as :ref:`LinkedList.push_back<class_LinkedList_method_push_back>`. Can be anything, including other :ref:`LinkedList<class_LinkedList>`\ s.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
