:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the MidiFile.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_MidiFile:

MidiFile
========

**Inherits:** :ref:`Resource<class_Resource>` **<** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

MIDI data file.

Description
-----------

This is a resource which represents the internal MIDI data used by :ref:`MidiPlayer<class_MidiPlayer>`.

Properties
----------

+-------------------------------------------+-------------------------------------------+-----------------------+
| :ref:`PoolByteArray<class_PoolByteArray>` | :ref:`data<class_MidiFile_property_data>` | ``PoolByteArray(  )`` |
+-------------------------------------------+-------------------------------------------+-----------------------+

Property Descriptions
---------------------

.. _class_MidiFile_property_data:

- :ref:`PoolByteArray<class_PoolByteArray>` **data**

+-----------+-----------------------+
| *Default* | ``PoolByteArray(  )`` |
+-----------+-----------------------+
| *Setter*  | set_data(value)       |
+-----------+-----------------------+
| *Getter*  | get_data()            |
+-----------+-----------------------+

A stream of bytes which represents MIDI data. This data is not meant to be modified, as MIDI files are imported or loaded via :ref:`MidiPlayer.load_midi<class_MidiPlayer_method_load_midi>`.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
