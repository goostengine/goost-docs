:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the GridRect.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_GridRect:

GridRect
========

**Inherits:** :ref:`Control<class_Control>` **<** :ref:`CanvasItem<class_CanvasItem>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

Draws a rectangular grid.

Description
-----------

A control which allows to draw a rectangular grid of any size. Provides basic methods for converting between grid and view coordinates with or without snapping, see methods :ref:`view_to_point<class_GridRect_method_view_to_point>` and :ref:`point_to_view<class_GridRect_method_point_to_view>`. The drawing can be completely customized by overriding :ref:`_draw_line<class_GridRect_method__draw_line>` method.

**Note**: the scope of this class is mostly limited to drawing, and does not provide additional features like dragging, scrolling or zooming as seen in classes like :ref:`GraphEdit<class_GraphEdit>`, but nonetheless possible to implement via script by modifying :ref:`origin_offset<class_GridRect_property_origin_offset>` and :ref:`origin_scale<class_GridRect_property_origin_scale>` properties.

Properties
----------

+---------------------------------------------+-------------------------------------------------------------------------------+------------------------------+
| :ref:`float<class_float>`                   | :ref:`cell_line_width<class_GridRect_property_cell_line_width>`               | ``1.0``                      |
+---------------------------------------------+-------------------------------------------------------------------------------+------------------------------+
| :ref:`CellOrigin<enum_GridRect_CellOrigin>` | :ref:`cell_origin<class_GridRect_property_cell_origin>`                       | ``0``                        |
+---------------------------------------------+-------------------------------------------------------------------------------+------------------------------+
| :ref:`Vector2<class_Vector2>`               | :ref:`cell_size<class_GridRect_property_cell_size>`                           | ``Vector2( 32, 32 )``        |
+---------------------------------------------+-------------------------------------------------------------------------------+------------------------------+
| :ref:`int<class_int>`                       | :ref:`divisions_horizontal<class_GridRect_property_divisions_horizontal>`     | ``8``                        |
+---------------------------------------------+-------------------------------------------------------------------------------+------------------------------+
| :ref:`float<class_float>`                   | :ref:`divisions_line_width<class_GridRect_property_divisions_line_width>`     | ``1.0``                      |
+---------------------------------------------+-------------------------------------------------------------------------------+------------------------------+
| :ref:`int<class_int>`                       | :ref:`divisions_vertical<class_GridRect_property_divisions_vertical>`         | ``8``                        |
+---------------------------------------------+-------------------------------------------------------------------------------+------------------------------+
| :ref:`bool<class_bool>`                     | :ref:`metadata_show_tooltip<class_GridRect_property_metadata_show_tooltip>`   | ``true``                     |
+---------------------------------------------+-------------------------------------------------------------------------------+------------------------------+
| :ref:`float<class_float>`                   | :ref:`origin_axes_line_width<class_GridRect_property_origin_axes_line_width>` | ``1.0``                      |
+---------------------------------------------+-------------------------------------------------------------------------------+------------------------------+
| :ref:`bool<class_bool>`                     | :ref:`origin_axes_visible<class_GridRect_property_origin_axes_visible>`       | ``false``                    |
+---------------------------------------------+-------------------------------------------------------------------------------+------------------------------+
| :ref:`bool<class_bool>`                     | :ref:`origin_centered<class_GridRect_property_origin_centered>`               | ``false``                    |
+---------------------------------------------+-------------------------------------------------------------------------------+------------------------------+
| :ref:`Vector2<class_Vector2>`               | :ref:`origin_offset<class_GridRect_property_origin_offset>`                   | ``Vector2( 0, 0 )``          |
+---------------------------------------------+-------------------------------------------------------------------------------+------------------------------+
| :ref:`Vector2<class_Vector2>`               | :ref:`origin_scale<class_GridRect_property_origin_scale>`                     | ``Vector2( 1, 1 )``          |
+---------------------------------------------+-------------------------------------------------------------------------------+------------------------------+
| :ref:`bool<class_bool>`                     | rect_clip_content                                                             | ``true`` *(parent override)* |
+---------------------------------------------+-------------------------------------------------------------------------------+------------------------------+

Methods
-------

+-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`       | :ref:`_draw_line<class_GridRect_method__draw_line>` **(** :ref:`Vector2<class_Vector2>` from, :ref:`Vector2<class_Vector2>` to, :ref:`Color<class_Color>` color, :ref:`float<class_float>` width, :ref:`Dictionary<class_Dictionary>` line **)** |virtual| |
+-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`clear_cell_metadata<class_GridRect_method_clear_cell_metadata>` **(** **)**                                                                                                                                                                          |
+-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Variant<class_Variant>` | :ref:`get_cell_metadata<class_GridRect_method_get_cell_metadata>` **(** :ref:`Vector2<class_Vector2>` cell **)** |const|                                                                                                                                   |
+-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`point_to_view<class_GridRect_method_point_to_view>` **(** :ref:`Vector2<class_Vector2>` point **)** |const|                                                                                                                                          |
+-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`set_cell_metadata<class_GridRect_method_set_cell_metadata>` **(** :ref:`Vector2<class_Vector2>` cell, :ref:`Variant<class_Variant>` metadata **)**                                                                                                   |
+-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`view_to_point<class_GridRect_method_view_to_point>` **(** :ref:`Vector2<class_Vector2>` position **)** |const|                                                                                                                                       |
+-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`view_to_point_snapped<class_GridRect_method_view_to_point_snapped>` **(** :ref:`Vector2<class_Vector2>` position **)** |const|                                                                                                                       |
+-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Signals
-------

.. _class_GridRect_signal_point_clicked:

- **point_clicked** **(** :ref:`Vector2<class_Vector2>` point, :ref:`Vector2<class_Vector2>` point_snapped, :ref:`Vector2<class_Vector2>` local_position **)**

Emitted when the grid is clicked. The ``point`` and ``point_snapped`` are specified in grid coordinates and are computed with :ref:`view_to_point<class_GridRect_method_view_to_point>` and :ref:`view_to_point_snapped<class_GridRect_method_view_to_point_snapped>` respectively. The ``local_position`` is the position in pixels relative to this control.

Enumerations
------------

.. _enum_GridRect_CellOrigin:

.. _class_GridRect_constant_CELL_ORIGIN_TOP_LEFT:

.. _class_GridRect_constant_CELL_ORIGIN_CENTER:

enum **CellOrigin**:

- **CELL_ORIGIN_TOP_LEFT** = **0** --- Cell's top-left offset, corresponds to ``Vector2(0, 0)``.

- **CELL_ORIGIN_CENTER** = **1** --- Cell's center offset, corresponds to ``cell_size * Vector2(0.5, 0.5)``.

----

.. _enum_GridRect_Axis:

.. _class_GridRect_constant_AXIS_X:

.. _class_GridRect_constant_AXIS_Y:

enum **Axis**:

- **AXIS_X** = **0** --- Horizontal axis.

- **AXIS_Y** = **1** --- Vertical axis.

----

.. _enum_GridRect_Line:

.. _class_GridRect_constant_LINE_CELL:

.. _class_GridRect_constant_LINE_DIVISION:

.. _class_GridRect_constant_LINE_AXIS:

enum **Line**:

- **LINE_CELL** = **0** --- Cell lines.

- **LINE_DIVISION** = **1** --- Division lines.

- **LINE_AXIS** = **2** --- Origin axes lines (X and Y).

Property Descriptions
---------------------

.. _class_GridRect_property_cell_line_width:

- :ref:`float<class_float>` **cell_line_width**

+-----------+----------------------------+
| *Default* | ``1.0``                    |
+-----------+----------------------------+
| *Setter*  | set_cell_line_width(value) |
+-----------+----------------------------+
| *Getter*  | get_cell_line_width()      |
+-----------+----------------------------+

The width of cell lines.

----

.. _class_GridRect_property_cell_origin:

- :ref:`CellOrigin<enum_GridRect_CellOrigin>` **cell_origin**

+-----------+------------------------+
| *Default* | ``0``                  |
+-----------+------------------------+
| *Setter*  | set_cell_origin(value) |
+-----------+------------------------+
| *Getter*  | get_cell_origin()      |
+-----------+------------------------+

Determines the cell's origin offset for drawing and snapping.

----

.. _class_GridRect_property_cell_size:

- :ref:`Vector2<class_Vector2>` **cell_size**

+-----------+-----------------------+
| *Default* | ``Vector2( 32, 32 )`` |
+-----------+-----------------------+
| *Setter*  | set_cell_size(value)  |
+-----------+-----------------------+
| *Getter*  | get_cell_size()       |
+-----------+-----------------------+

The size of individual cells drawn via grid line intersections.

----

.. _class_GridRect_property_divisions_horizontal:

- :ref:`int<class_int>` **divisions_horizontal**

+-----------+---------------------------------+
| *Default* | ``8``                           |
+-----------+---------------------------------+
| *Setter*  | set_divisions_horizontal(value) |
+-----------+---------------------------------+
| *Getter*  | get_divisions_horizontal()      |
+-----------+---------------------------------+

The number of horizontal divisions along the :ref:`AXIS_X<class_GridRect_constant_AXIS_X>`.

----

.. _class_GridRect_property_divisions_line_width:

- :ref:`float<class_float>` **divisions_line_width**

+-----------+---------------------------------+
| *Default* | ``1.0``                         |
+-----------+---------------------------------+
| *Setter*  | set_divisions_line_width(value) |
+-----------+---------------------------------+
| *Getter*  | get_divisions_line_width()      |
+-----------+---------------------------------+

The width of division lines.

----

.. _class_GridRect_property_divisions_vertical:

- :ref:`int<class_int>` **divisions_vertical**

+-----------+-------------------------------+
| *Default* | ``8``                         |
+-----------+-------------------------------+
| *Setter*  | set_divisions_vertical(value) |
+-----------+-------------------------------+
| *Getter*  | get_divisions_vertical()      |
+-----------+-------------------------------+

The number of horizontal divisions along the :ref:`AXIS_Y<class_GridRect_constant_AXIS_Y>`.

----

.. _class_GridRect_property_metadata_show_tooltip:

- :ref:`bool<class_bool>` **metadata_show_tooltip**

+-----------+----------------------------------+
| *Default* | ``true``                         |
+-----------+----------------------------------+
| *Setter*  | set_metadata_show_tooltip(value) |
+-----------+----------------------------------+
| *Getter*  | is_showing_metadata_tooltip()    |
+-----------+----------------------------------+

If ``true``, displays a tooltip on hover with coordinates snapped to the grid.

----

.. _class_GridRect_property_origin_axes_line_width:

- :ref:`float<class_float>` **origin_axes_line_width**

+-----------+-----------------------------------+
| *Default* | ``1.0``                           |
+-----------+-----------------------------------+
| *Setter*  | set_origin_axes_line_width(value) |
+-----------+-----------------------------------+
| *Getter*  | get_origin_axes_line_width()      |
+-----------+-----------------------------------+

The width of main axes lines (X and Y). Only relevant when :ref:`origin_axes_visible<class_GridRect_property_origin_axes_visible>` is set to ``true``.

----

.. _class_GridRect_property_origin_axes_visible:

- :ref:`bool<class_bool>` **origin_axes_visible**

+-----------+--------------------------------+
| *Default* | ``false``                      |
+-----------+--------------------------------+
| *Setter*  | set_origin_axes_visible(value) |
+-----------+--------------------------------+
| *Getter*  | is_origin_axes_visible()       |
+-----------+--------------------------------+

If ``true``, displays main axes (X and Y).

----

.. _class_GridRect_property_origin_centered:

- :ref:`bool<class_bool>` **origin_centered**

+-----------+----------------------------+
| *Default* | ``false``                  |
+-----------+----------------------------+
| *Setter*  | set_origin_centered(value) |
+-----------+----------------------------+
| *Getter*  | is_origin_centered()       |
+-----------+----------------------------+

If ``true``, the origin is centered to this control's center. The :ref:`origin_offset<class_GridRect_property_origin_offset>` will additionally shift the origin away from the center.

----

.. _class_GridRect_property_origin_offset:

- :ref:`Vector2<class_Vector2>` **origin_offset**

+-----------+--------------------------+
| *Default* | ``Vector2( 0, 0 )``      |
+-----------+--------------------------+
| *Setter*  | set_origin_offset(value) |
+-----------+--------------------------+
| *Getter*  | get_origin_offset()      |
+-----------+--------------------------+

The offset that shifts the origin. Can be interpreted as a scroll offset.

----

.. _class_GridRect_property_origin_scale:

- :ref:`Vector2<class_Vector2>` **origin_scale**

+-----------+-------------------------+
| *Default* | ``Vector2( 1, 1 )``     |
+-----------+-------------------------+
| *Setter*  | set_origin_scale(value) |
+-----------+-------------------------+
| *Getter*  | get_origin_scale()      |
+-----------+-------------------------+

The scale that zoom in or out the grid coordinates.

Method Descriptions
-------------------

.. _class_GridRect_method__draw_line:

- :ref:`bool<class_bool>` **_draw_line** **(** :ref:`Vector2<class_Vector2>` from, :ref:`Vector2<class_Vector2>` to, :ref:`Color<class_Color>` color, :ref:`float<class_float>` width, :ref:`Dictionary<class_Dictionary>` line **)** |virtual|

Called before drawing a grid line. The first four parameters match the interface of :ref:`CanvasItem.draw_line<class_CanvasItem_method_draw_line>`.

The ``line`` parameter is a :ref:`Dictionary<class_Dictionary>` which contains the following fields:

``step``: The line's step, which describes the current grid integer coordinate along the axis (can be negative or positive).

``axis``: The line's axis along which it's drawn, one of :ref:`Axis<enum_GridRect_Axis>` values.

``type``: The line's type, one of :ref:`Line<enum_GridRect_Line>` values.

Return ``true`` to draw the current line using default parameters, or ``false`` to discard it. You can still draw the line using :ref:`CanvasItem.draw_line<class_CanvasItem_method_draw_line>` method, or any other drawing method.

----

.. _class_GridRect_method_clear_cell_metadata:

- void **clear_cell_metadata** **(** **)**

Clears all cell metadata from the grid previously assigned with :ref:`set_cell_metadata<class_GridRect_method_set_cell_metadata>`.

----

.. _class_GridRect_method_get_cell_metadata:

- :ref:`Variant<class_Variant>` **get_cell_metadata** **(** :ref:`Vector2<class_Vector2>` cell **)** |const|

Returns metadata for individual cell on the grid previously assigned with :ref:`set_cell_metadata<class_GridRect_method_set_cell_metadata>` (only integer coordinates are accepted). See also :ref:`metadata_show_tooltip<class_GridRect_property_metadata_show_tooltip>`.

----

.. _class_GridRect_method_point_to_view:

- :ref:`Vector2<class_Vector2>` **point_to_view** **(** :ref:`Vector2<class_Vector2>` point **)** |const|

Converts a point specified in grid coordinates to local position of this control.

----

.. _class_GridRect_method_set_cell_metadata:

- void **set_cell_metadata** **(** :ref:`Vector2<class_Vector2>` cell, :ref:`Variant<class_Variant>` metadata **)**

Assigns metadata for individual cell on the grid (only integer coordinates are accepted). See also :ref:`metadata_show_tooltip<class_GridRect_property_metadata_show_tooltip>`.

----

.. _class_GridRect_method_view_to_point:

- :ref:`Vector2<class_Vector2>` **view_to_point** **(** :ref:`Vector2<class_Vector2>` position **)** |const|

Converts a local position of this control to grid coordinates. See also :ref:`view_to_point_snapped<class_GridRect_method_view_to_point_snapped>`.

----

.. _class_GridRect_method_view_to_point_snapped:

- :ref:`Vector2<class_Vector2>` **view_to_point_snapped** **(** :ref:`Vector2<class_Vector2>` position **)** |const|

Converts a point specified in grid coordinates to local position of this control. The point is snapped to grid line intersections when :ref:`cell_origin<class_GridRect_property_cell_origin>` is set to :ref:`CELL_ORIGIN_TOP_LEFT<class_GridRect_constant_CELL_ORIGIN_TOP_LEFT>`, or snapped to grid cell center if :ref:`cell_origin<class_GridRect_property_cell_origin>` is set to :ref:`CELL_ORIGIN_CENTER<class_GridRect_constant_CELL_ORIGIN_CENTER>`. See also :ref:`view_to_point<class_GridRect_method_view_to_point>`.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
