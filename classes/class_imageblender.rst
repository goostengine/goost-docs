:github_url: hide

.. Generated automatically by doc/tools/makerst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the ImageBlender.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_ImageBlender:

ImageBlender
============

**Inherits:** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

Provides advanced image blending methods (derived from OpenGL specification).

Description
-----------

Sets up custom blending options which builds upon :ref:`Image<class_Image>` blending methods. This class uses two equations: one for the RGB values, and another one for the alpha value. The default behavior of this class is the same as :ref:`Image.blend_rect<class_Image_method_blend_rect>`.

Properties
----------

+-------------------------------------------------------+-----------------------------------------------------------------------+--------+
| :ref:`BlendFactor<enum_ImageBlender_BlendFactor>`     | :ref:`alpha_dst_factor<class_ImageBlender_property_alpha_dst_factor>` | ``7``  |
+-------------------------------------------------------+-----------------------------------------------------------------------+--------+
| :ref:`BlendEquation<enum_ImageBlender_BlendEquation>` | :ref:`alpha_equation<class_ImageBlender_property_alpha_equation>`     | ``0``  |
+-------------------------------------------------------+-----------------------------------------------------------------------+--------+
| :ref:`BlendFactor<enum_ImageBlender_BlendFactor>`     | :ref:`alpha_src_factor<class_ImageBlender_property_alpha_src_factor>` | ``1``  |
+-------------------------------------------------------+-----------------------------------------------------------------------+--------+
| :ref:`BlendFactor<enum_ImageBlender_BlendFactor>`     | :ref:`rgb_dst_factor<class_ImageBlender_property_rgb_dst_factor>`     | ``10`` |
+-------------------------------------------------------+-----------------------------------------------------------------------+--------+
| :ref:`BlendEquation<enum_ImageBlender_BlendEquation>` | :ref:`rgb_equation<class_ImageBlender_property_rgb_equation>`         | ``0``  |
+-------------------------------------------------------+-----------------------------------------------------------------------+--------+
| :ref:`BlendFactor<enum_ImageBlender_BlendFactor>`     | :ref:`rgb_src_factor<class_ImageBlender_property_rgb_src_factor>`     | ``6``  |
+-------------------------------------------------------+-----------------------------------------------------------------------+--------+

Methods
-------

+------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void | :ref:`blend_rect<class_ImageBlender_method_blend_rect>` **(** :ref:`Image<class_Image>` src, :ref:`Rect2<class_Rect2>` src_rect, :ref:`Image<class_Image>` dst, :ref:`Vector2<class_Vector2>` dst_pos **)** |const|                                                                                    |
+------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void | :ref:`stamp_rect<class_ImageBlender_method_stamp_rect>` **(** :ref:`Image<class_Image>` src, :ref:`Rect2<class_Rect2>` src_rect, :ref:`Image<class_Image>` dst, :ref:`Vector2<class_Vector2>` dst_init_pos, :ref:`Vector2<class_Vector2>` dst_end_pos, :ref:`float<class_float>` spacing **)** |const| |
+------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Enumerations
------------

.. _enum_ImageBlender_BlendEquation:

.. _class_ImageBlender_constant_FUNC_ADD:

.. _class_ImageBlender_constant_FUNC_SUBTRACT:

.. _class_ImageBlender_constant_FUNC_REVERSE_SUBTRACT:

.. _class_ImageBlender_constant_FUNC_MIN:

.. _class_ImageBlender_constant_FUNC_MAX:

enum **BlendEquation**:

- **FUNC_ADD** = **0** --- Adds the ``src`` and ``dst`` values.

- **FUNC_SUBTRACT** = **1** --- Substracts the ``dst`` value from the ``src`` value.

- **FUNC_REVERSE_SUBTRACT** = **2** --- Substracts the ``src`` value from the ``dst`` value.

- **FUNC_MIN** = **3** --- Selects the minimum from the ``src`` and ``dst`` values.

- **FUNC_MAX** = **4** --- Selects the maximum from the ``src`` and ``dst`` values.

----

.. _enum_ImageBlender_BlendFactor:

.. _class_ImageBlender_constant_FACTOR_ZERO:

.. _class_ImageBlender_constant_FACTOR_ONE:

.. _class_ImageBlender_constant_FACTOR_SRC_COLOR:

.. _class_ImageBlender_constant_FACTOR_ONE_MINUS_SRC_COLOR:

.. _class_ImageBlender_constant_FACTOR_DST_COLOR:

.. _class_ImageBlender_constant_FACTOR_ONE_MINUS_DST_COLOR:

.. _class_ImageBlender_constant_FACTOR_SRC_ALPHA:

.. _class_ImageBlender_constant_FACTOR_ONE_MINUS_SRC_ALPHA:

.. _class_ImageBlender_constant_FACTOR_DST_ALPHA:

.. _class_ImageBlender_constant_FACTOR_ONE_MINUS_DST_ALPHA:

.. _class_ImageBlender_constant_FACTOR_DST_ALPHA_TIMES_ONE_MINUS_SRC_ALPHA:

enum **BlendFactor**:

- **FACTOR_ZERO** = **0** --- Factor is equal to 0.

- **FACTOR_ONE** = **1** --- Factor is equal to 1.

- **FACTOR_SRC_COLOR** = **2** --- Factor is equal to the ``src`` color.

- **FACTOR_ONE_MINUS_SRC_COLOR** = **3** --- Factor is equal to 1 minus the ``src`` color.

- **FACTOR_DST_COLOR** = **4** --- Factor is equal to the ``dst`` color.

- **FACTOR_ONE_MINUS_DST_COLOR** = **5** --- Factor is equal to 1 minus the ``dst`` color.

- **FACTOR_SRC_ALPHA** = **6** --- Factor is equal to the alpha value of the ``src`` color.

- **FACTOR_ONE_MINUS_SRC_ALPHA** = **7** --- Factor is equal to 1 minus the alpha value of the ``src`` color.

- **FACTOR_DST_ALPHA** = **8** --- Factor is equal to the alpha value of the ``dst`` color.

- **FACTOR_ONE_MINUS_DST_ALPHA** = **9** --- Factor is equal to 1 minus the alpha value of the ``dst`` color.

- **FACTOR_DST_ALPHA_TIMES_ONE_MINUS_SRC_ALPHA** = **10** --- Factor is equal to ``FACTOR_DST_ALPHA`` times ``FACTOR_ONE_MINUS_SRC_ALPHA``.

Property Descriptions
---------------------

.. _class_ImageBlender_property_alpha_dst_factor:

- :ref:`BlendFactor<enum_ImageBlender_BlendFactor>` **alpha_dst_factor**

+-----------+-----------------------------+
| *Default* | ``7``                       |
+-----------+-----------------------------+
| *Setter*  | set_alpha_dst_factor(value) |
+-----------+-----------------------------+
| *Getter*  | get_alpha_dst_factor()      |
+-----------+-----------------------------+

Determines the value that multiply the ``dst`` alpha value on those equations that require it.

----

.. _class_ImageBlender_property_alpha_equation:

- :ref:`BlendEquation<enum_ImageBlender_BlendEquation>` **alpha_equation**

+-----------+---------------------------+
| *Default* | ``0``                     |
+-----------+---------------------------+
| *Setter*  | set_alpha_equation(value) |
+-----------+---------------------------+
| *Getter*  | get_alpha_equation()      |
+-----------+---------------------------+

Determines the equation that blends the alpha values.

----

.. _class_ImageBlender_property_alpha_src_factor:

- :ref:`BlendFactor<enum_ImageBlender_BlendFactor>` **alpha_src_factor**

+-----------+-----------------------------+
| *Default* | ``1``                       |
+-----------+-----------------------------+
| *Setter*  | set_alpha_src_factor(value) |
+-----------+-----------------------------+
| *Getter*  | get_alpha_src_factor()      |
+-----------+-----------------------------+

Determines the value that multiply the ``src`` alpha value on those equations that require it.

----

.. _class_ImageBlender_property_rgb_dst_factor:

- :ref:`BlendFactor<enum_ImageBlender_BlendFactor>` **rgb_dst_factor**

+-----------+---------------------------+
| *Default* | ``10``                    |
+-----------+---------------------------+
| *Setter*  | set_rgb_dst_factor(value) |
+-----------+---------------------------+
| *Getter*  | get_rgb_dst_factor()      |
+-----------+---------------------------+

Determines the values that multiply the ``dst`` RGB values on those equations that require it.

----

.. _class_ImageBlender_property_rgb_equation:

- :ref:`BlendEquation<enum_ImageBlender_BlendEquation>` **rgb_equation**

+-----------+-------------------------+
| *Default* | ``0``                   |
+-----------+-------------------------+
| *Setter*  | set_rgb_equation(value) |
+-----------+-------------------------+
| *Getter*  | get_rgb_equation()      |
+-----------+-------------------------+

Determines the equation that blends the RGB values.

----

.. _class_ImageBlender_property_rgb_src_factor:

- :ref:`BlendFactor<enum_ImageBlender_BlendFactor>` **rgb_src_factor**

+-----------+---------------------------+
| *Default* | ``6``                     |
+-----------+---------------------------+
| *Setter*  | set_rgb_src_factor(value) |
+-----------+---------------------------+
| *Getter*  | get_rgb_src_factor()      |
+-----------+---------------------------+

Determines the values that multiply the ``src`` RGB values on those equations that require it.

Method Descriptions
-------------------

.. _class_ImageBlender_method_blend_rect:

- void **blend_rect** **(** :ref:`Image<class_Image>` src, :ref:`Rect2<class_Rect2>` src_rect, :ref:`Image<class_Image>` dst, :ref:`Vector2<class_Vector2>` dst_pos **)** |const|

Blends ``src_rect`` from ``src`` image to ``dst`` image at coordinates ``dst_pos``.

----

.. _class_ImageBlender_method_stamp_rect:

- void **stamp_rect** **(** :ref:`Image<class_Image>` src, :ref:`Rect2<class_Rect2>` src_rect, :ref:`Image<class_Image>` dst, :ref:`Vector2<class_Vector2>` dst_init_pos, :ref:`Vector2<class_Vector2>` dst_end_pos, :ref:`float<class_float>` spacing **)** |const|

Stamps ``src_rect`` from ``src`` image to ``dst`` image in a straight line from ``dst_init_pos`` to ``dst_end_pos``, with a certain ``spacing`` between stamps. You may use it to draw strokes.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
