:github_url: hide

.. Generated automatically by doc/tools/makerst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the CommandLineOption.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_CommandLineOption:

CommandLineOption
=================

**Inherits:** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

Defines a command-line option for :ref:`CommandLineParser<class_CommandLineParser>`.

Description
-----------

This class is used to define an option on the command line. The same option is allowed to have multiple aliases. It is also used to describe how the option is used: it may be a flag (e.g. ``-v``) or take a value (e.g. ``-o file``).

Properties
----------

+-----------------------------------------------+--------------------------------------------------------------------+-------------------------+
| :ref:`PoolStringArray<class_PoolStringArray>` | :ref:`allowed_args<class_CommandLineOption_property_allowed_args>` | ``PoolStringArray(  )`` |
+-----------------------------------------------+--------------------------------------------------------------------+-------------------------+
| :ref:`int<class_int>`                         | :ref:`arg_count<class_CommandLineOption_property_arg_count>`       | ``1``                   |
+-----------------------------------------------+--------------------------------------------------------------------+-------------------------+
| :ref:`String<class_String>`                   | :ref:`arg_text<class_CommandLineOption_property_arg_text>`         | ``"<arg>"``             |
+-----------------------------------------------+--------------------------------------------------------------------+-------------------------+
| :ref:`String<class_String>`                   | :ref:`category<class_CommandLineOption_property_category>`         | ``""``                  |
+-----------------------------------------------+--------------------------------------------------------------------+-------------------------+
| :ref:`PoolStringArray<class_PoolStringArray>` | :ref:`default_args<class_CommandLineOption_property_default_args>` | ``PoolStringArray(  )`` |
+-----------------------------------------------+--------------------------------------------------------------------+-------------------------+
| :ref:`String<class_String>`                   | :ref:`description<class_CommandLineOption_property_description>`   | ``""``                  |
+-----------------------------------------------+--------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                       | :ref:`hidden<class_CommandLineOption_property_hidden>`             | ``false``               |
+-----------------------------------------------+--------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                       | :ref:`meta<class_CommandLineOption_property_meta>`                 | ``false``               |
+-----------------------------------------------+--------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                       | :ref:`multitoken<class_CommandLineOption_property_multitoken>`     | ``false``               |
+-----------------------------------------------+--------------------------------------------------------------------+-------------------------+
| :ref:`PoolStringArray<class_PoolStringArray>` | :ref:`names<class_CommandLineOption_property_names>`               | ``PoolStringArray(  )`` |
+-----------------------------------------------+--------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                       | :ref:`positional<class_CommandLineOption_property_positional>`     | ``false``               |
+-----------------------------------------------+--------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                       | :ref:`required<class_CommandLineOption_property_required>`         | ``false``               |
+-----------------------------------------------+--------------------------------------------------------------------+-------------------------+

Methods
-------

+------+--------------------------------------------------------------------------------------------------------------------+
| void | :ref:`add_allowed_arg<class_CommandLineOption_method_add_allowed_arg>` **(** :ref:`String<class_String>` arg **)** |
+------+--------------------------------------------------------------------------------------------------------------------+
| void | :ref:`add_default_arg<class_CommandLineOption_method_add_default_arg>` **(** :ref:`String<class_String>` arg **)** |
+------+--------------------------------------------------------------------------------------------------------------------+
| void | :ref:`add_name<class_CommandLineOption_method_add_name>` **(** :ref:`String<class_String>` name **)**              |
+------+--------------------------------------------------------------------------------------------------------------------+

Signals
-------

.. _class_CommandLineOption_signal_parsed:

- **parsed** **(** :ref:`PoolStringArray<class_PoolStringArray>` values **)**

Emitted after calling :ref:`CommandLineParser.parse<class_CommandLineParser_method_parse>` if it returns :ref:`@GlobalScope.OK<class_@GlobalScope_constant_OK>`. The ``values`` list contains all values that were passed to the option.

Property Descriptions
---------------------

.. _class_CommandLineOption_property_allowed_args:

- :ref:`PoolStringArray<class_PoolStringArray>` **allowed_args**

+-----------+-------------------------+
| *Default* | ``PoolStringArray(  )`` |
+-----------+-------------------------+
| *Setter*  | set_allowed_args(value) |
+-----------+-------------------------+
| *Getter*  | get_allowed_args()      |
+-----------+-------------------------+

A set of values that are allowed by the option. If a different value is passed, the parsing will fail. Empty if any value is allowed.

----

.. _class_CommandLineOption_property_arg_count:

- :ref:`int<class_int>` **arg_count**

+-----------+----------------------+
| *Default* | ``1``                |
+-----------+----------------------+
| *Setter*  | set_arg_count(value) |
+-----------+----------------------+
| *Getter*  | get_arg_count()      |
+-----------+----------------------+

The number of arguments required for the option. A value less than 0 means all remaining values up to the next option or the end of the argument list.

----

.. _class_CommandLineOption_property_arg_text:

- :ref:`String<class_String>` **arg_text**

+-----------+---------------------+
| *Default* | ``"<arg>"``         |
+-----------+---------------------+
| *Setter*  | set_arg_text(value) |
+-----------+---------------------+
| *Getter*  | get_arg_text()      |
+-----------+---------------------+

Name for the option arguments that will be displayed in the help message. For example: ``--input <filename>``, where ``<filename>`` is ``arg_text``.

----

.. _class_CommandLineOption_property_category:

- :ref:`String<class_String>` **category**

+-----------+---------------------+
| *Default* | ``""``              |
+-----------+---------------------+
| *Setter*  | set_category(value) |
+-----------+---------------------+
| *Getter*  | get_category()      |
+-----------+---------------------+

Category name, options sharing the same category are grouped together in the help message.

----

.. _class_CommandLineOption_property_default_args:

- :ref:`PoolStringArray<class_PoolStringArray>` **default_args**

+-----------+-------------------------+
| *Default* | ``PoolStringArray(  )`` |
+-----------+-------------------------+
| *Setter*  | set_default_args(value) |
+-----------+-------------------------+
| *Getter*  | get_default_args()      |
+-----------+-------------------------+

A set of values that will be used by default if no value specified.

----

.. _class_CommandLineOption_property_description:

- :ref:`String<class_String>` **description**

+-----------+------------------------+
| *Default* | ``""``                 |
+-----------+------------------------+
| *Setter*  | set_description(value) |
+-----------+------------------------+
| *Getter*  | get_description()      |
+-----------+------------------------+

Description that will be displayed in the help message.

----

.. _class_CommandLineOption_property_hidden:

- :ref:`bool<class_bool>` **hidden**

+-----------+-------------------+
| *Default* | ``false``         |
+-----------+-------------------+
| *Setter*  | set_hidden(value) |
+-----------+-------------------+
| *Getter*  | is_hidden()       |
+-----------+-------------------+

If ``true``, the option will **not** be displayed in the help message.

----

.. _class_CommandLineOption_property_meta:

- :ref:`bool<class_bool>` **meta**

+-----------+--------------------+
| *Default* | ``false``          |
+-----------+--------------------+
| *Setter*  | set_as_meta(value) |
+-----------+--------------------+
| *Getter*  | is_meta()          |
+-----------+--------------------+

If ``true``, the option will be treated as a meta option, such as ``--help`` or ``--version``. If :ref:`CommandLineParser<class_CommandLineParser>` parses such option, any :ref:`required<class_CommandLineOption_property_required>` options will not throw an error if they are not specified on the command-line.

----

.. _class_CommandLineOption_property_multitoken:

- :ref:`bool<class_bool>` **multitoken**

+-----------+-----------------------+
| *Default* | ``false``             |
+-----------+-----------------------+
| *Setter*  | set_multitoken(value) |
+-----------+-----------------------+
| *Getter*  | is_multitoken()       |
+-----------+-----------------------+

If ``true``, option can be specified multiple times. Total count can be obtained using :ref:`CommandLineParser.get_occurrence_count<class_CommandLineParser_method_get_occurrence_count>`.

----

.. _class_CommandLineOption_property_names:

- :ref:`PoolStringArray<class_PoolStringArray>` **names**

+-----------+-------------------------+
| *Default* | ``PoolStringArray(  )`` |
+-----------+-------------------------+
| *Setter*  | set_names(value)        |
+-----------+-------------------------+
| *Getter*  | get_names()             |
+-----------+-------------------------+

Specifies all valid names (aliases) for this option.

----

.. _class_CommandLineOption_property_positional:

- :ref:`bool<class_bool>` **positional**

+-----------+-----------------------+
| *Default* | ``false``             |
+-----------+-----------------------+
| *Setter*  | set_positional(value) |
+-----------+-----------------------+
| *Getter*  | is_positional()       |
+-----------+-----------------------+

If ``true``, option can be specified without a name. In this case, the first unparsed option marked as :ref:`positional<class_CommandLineOption_property_positional>` will be selected.

----

.. _class_CommandLineOption_property_required:

- :ref:`bool<class_bool>` **required**

+-----------+---------------------+
| *Default* | ``false``           |
+-----------+---------------------+
| *Setter*  | set_required(value) |
+-----------+---------------------+
| *Getter*  | is_required()       |
+-----------+---------------------+

If ``true``, :ref:`CommandLineParser.parse<class_CommandLineParser_method_parse>` will return an error if the option was not specified in the argument list.

Method Descriptions
-------------------

.. _class_CommandLineOption_method_add_allowed_arg:

- void **add_allowed_arg** **(** :ref:`String<class_String>` arg **)**

Appends a new allowed argument to the list of :ref:`allowed_args<class_CommandLineOption_property_allowed_args>`.

----

.. _class_CommandLineOption_method_add_default_arg:

- void **add_default_arg** **(** :ref:`String<class_String>` arg **)**

Appends a new default argument to the list of :ref:`default_args<class_CommandLineOption_property_default_args>`.

----

.. _class_CommandLineOption_method_add_name:

- void **add_name** **(** :ref:`String<class_String>` name **)**

Appends a new name (alias) to the list of :ref:`names<class_CommandLineOption_property_names>`.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
